setenv EDITOR nvim
setenv PAGER nvimpager
setenv NNN_PLUG "f:finder;c:fzcd;p:preview-tui;z:autojump"
setenv NNN_OPTS "aACdu"

set PATH \
    $HOME/.local/bin \
    $HOME/.cargo/bin \
    $PATH

alias ls lsd
alias nnn "PAGER='nvimpager -p' "(which nnn)
alias fc-select "fc-list | sed -r 's/^[^:]+:[ ]+([^,:]+)([,:].*)?/\1/' | sort -u | fzf --layout reverse-list"

zoxide init fish | source

set fzf_directory_opts --bind "ctrl-e:execute($EDITOR {} &> /dev/tty)" --bind "ctrl-o:execute(xdg-open {} &> /dev/tty)"

function fish_prompt --description 'Write out the prompt'
    set -l last_pipestatus $pipestatus
    set -lx __fish_last_status $status # Export for __fish_print_pipestatus.
    set -l normal (set_color normal)
    set -q fish_color_status
    or set -g fish_color_status --background=red white

    # Color the prompt differently when we're root
    set -l color_cwd $fish_color_cwd
    set -l suffix '>'
    if functions -q fish_is_root_user; and fish_is_root_user
        if set -q fish_color_cwd_root
            set color_cwd $fish_color_cwd_root
        end
        set suffix '#'
    end

    # Write pipestatus
    # If the status was carried over (if no command is issued or if `set` leaves the status untouched), don't bold it.
    set -l bold_flag --bold
    set -q __fish_prompt_status_generation; or set -g __fish_prompt_status_generation $status_generation
    if test $__fish_prompt_status_generation = $status_generation
        set bold_flag
    end
    set __fish_prompt_status_generation $status_generation
    set -l status_color (set_color $fish_color_status)
    set -l statusb_color (set_color $bold_flag $fish_color_status)
    set -l prompt_status (__fish_print_pipestatus "[" "]" "|" "$status_color" "$statusb_color" $last_pipestatus)

    # Show background jobs in prompt.
    set -l jobs_color (set_color $fish_color_quote)
    set -l jobs (\
    	jobs \
	| tail -n +1 \
	| sort -n \
	| sed -E "s/^([0-9]+)\t.*\t(.*)\$/\1:$jobs_color\2$normal/" \
	| sed -e ':a' -e '$!{N;ba' -e '}' -e 's/\n/|/g' \
	)

    if test "$jobs" != ""
        set prompt_jobs "{$jobs}"
    end

    echo -n -s (prompt_login)' ' (set_color $color_cwd) (prompt_pwd) $normal (fish_vcs_prompt) $normal " "$prompt_jobs " "$prompt_status $suffix " "
end
