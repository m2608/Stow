# переопределяем префикс
unbind C-b
set -g prefix C-space

# Используем Prefix Tab для переключения между двумя последними окнами.
bind-key Tab last-window

# Shift+PgUp для включения прокрутки.
bind-key -n S-PgUp copy-mode -u

# Включение режима "Bracketed Paste" для вставки. В этом режиме перед вставкой и после
# неё вставляются специальные ESC-последовательность, чтобы вставка производилась в
# "сыром" виде.
bind ] paste-buffer -p

# Для работы OSC52. Почему-то, если оставить значение по-умолчанию "external",
# в связке alacritty+tmux+nvim, копирование в буфер не работает.
# Документация: https://github.com/tmux/tmux/wiki/Clipboard
set -s set-clipboard on

# Открываем панели в том же каталоге, что и текущая.
bind '"' split-window -v -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"

bind r rotate-window

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

bind-key K resize-pane -U
bind-key J resize-pane -D
bind-key H resize-pane -L
bind-key L resize-pane -R

# nvim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+[ ]+(nvim)$'"

# включаем заголовки панелей, если их несколько в окне
set-hook -g window-layout-changed 'set-window -F pane-border-status "#{?#{==:#{window_panes},1},off,top}"'

# Содержимое строки статуса.
set-option -g status-left-length 20
set-option -g status-right "#(hostname | cut -d '.' -f 1) %H:%M"
set-option -g status-right-length 32

# Автоматическое переименование табов с помощью специальных ESC-последовательностей,
# которые может посылать запущенная в tmux программа.
set-window-option -g automatic-rename on

# Стайлинг строки статуса.
set -g status-position top
set -g status-style                 "fg=colour7,bg=default"
set -g status-left                  "#[fg=colour15,bg=default,bold] #S #[fg=colour7,bg=default,nobold]|"
set -g window-status-format         "#[fg=colour7,bg=default] #I:#W "
set -g window-status-current-format "#[fg=colour7,bg=default,bold]⟦#I:#W⟧"
set -g window-status-separator      ""

# использовать горячие клавиши vi в режиме копирования
set-option -g mode-keys vi
bind-key -T copy-mode-vi V   send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y   send-keys -X copy-selection-and-cancel

# нумерация окон с 1, а не с 0
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on
set-option -g escape-time 1
set-option -g repeat-time 0

set-window-option -g allow-rename on

# Задержка при показе номеров панелей по prefix q.
set -g display-panes-time 2000

# увеличиваем размер буфера прокрутки
set-option -g history-limit 100000

# обновлять переменную среды при открытии новых окон
set-option -g update-environment "DISPLAY"

# включаем возможность проброса ansi-последовательность в терминал
# опцию нужно включить для установки base16-тем
set-option -g allow-passthrough on

set-option -g focus-events on

# Что можно добавить в будущем:

# Копирование файлов в сессии tmux на удаленный сервер
#
# pipe-pane -o "tail -n +2 | base64 -d > ~/output"
# send-keys "base64 -w 0 /some/file && read" Enter
# pipe-pane
# send-keys Enter
#
# Всплывающее окно с отдельным терминалом
#
# bind-key -n F12 popup -KER "tmux attach -t popup || tmux new -s popup"
bind-key -n F12 display-popup -d "#{pane_current_path}" -w 80% -h 80% -E

bind-key p display-popup -w 80% -h 80% -E $HOME/.local/bin/fzf-run.sh

# переопределяем возможности терминала st - нужно для того, чтобы в nvim
# менялась форма курсора при переходе в insert mode
# https://vi.stackexchange.com/questions/22224/change-neovim-cursor-in-insert-mode-under-st-simple-terminal-and-tmux
if-shell "printenv TERM | grep '^st-'" {
  set -as terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
}

if-shell "test -f $HOME/.tmux.local.conf" {
  source-file "$HOME/.tmux.local.conf"
}
